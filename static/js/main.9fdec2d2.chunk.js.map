{"version":3,"sources":["components/Heading.jsx","redux/reducer.jsx","components/ClubsList.jsx","propTypesConstant.js","App.jsx","api.js","redux/store.jsx","index.js"],"names":["Heading","className","initialState","clubsList","cities","setCities","payload","type","ClubsList","PropTypes","arrayOf","shape","title_short","string","isRequired","city","title","slug","activity","link","logo","props","map","club","key","Club","href","src","alt","connect","state","dispatch","getClubs","a","fetch","then","response","json","data","setOfCities","Set","useEffect","Cities","store","createStore","action","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9fdec2d2.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Heading = () => (\n  <div className=\"heading\">\n    <h1 className=\"heading__title\">Запись на тренировки онлайн</h1>\n    <p className=\"heading__list-title\">На нашем сайте вы сможете:</p>\n    <ul className=\"heading__list\">\n\n      <li className=\"heading__item\">\n          Узнать расписание тренировок в спортивных клубах\n      </li>\n      <li className=\"heading__item\">Записаться на тренировку</li>\n      <li className=\"heading__item\">\n          Выбрать абонемент и оплатить его кредитной картой\n      </li>\n    </ul>\n  </div>\n);\n","import { getClubs } from '../api';\n\nconst SET_CLUBS = 'SET_CLUBS';\nconst SET_CITIES = 'SET_SITIES';\n\nconst initialState = {\n  clubsList: [],\n  cities: [],\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CLUBS:\n      return {\n        ...state,\n        clubsList: action.payload,\n      };\n\n    case SET_CITIES:\n      return {\n        ...state,\n        cities: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setClubs = payload => ({\n  type: SET_CLUBS,\n  payload,\n});\n\nconst setCities = payload => ({\n  type: SET_CITIES,\n  payload,\n});\n\nexport const getClubsThunk = () => async(dispatch) => {\n  const data = await getClubs();\n\n  dispatch(setClubs(data));\n  const setOfCities = new Set(data.map(club => club.city.title));\n  const cities = [...setOfCities];\n\n  dispatch(setCities(cities));\n};\n","import React from 'react';\nimport './ClubsList.scss';\nimport { clubsListPropTypes, clubPropTypes } from '../propTypesConstant';\n\nexport const ClubsList = (props) => {\n  const { clubsList } = props;\n\n  return (\n    <div className=\"list\">\n      {clubsList.map(club => (\n        <Club club={club} key={club.title} />\n      ))}\n    </div>\n  );\n};\n\nconst Club = (props) => {\n  const { club } = props;\n\n  return (\n    <div className=\"item\" key={club.title}>\n      <a href={club.link} className=\"item__link\">\n        <img src={club.logo} alt=\"club logo\" className=\"item__logo\" />\n      </a>\n      <p className=\"item__title\">{club.title_short}</p>\n    </div>\n  );\n};\n\nClubsList.propTypes = {\n  clubsList: clubsListPropTypes.isRequired,\n};\n\nClub.propTypes = {\n  club: clubPropTypes.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const clubsListPropTypes = PropTypes.arrayOf(\n  PropTypes.shape({\n    title_short: PropTypes.string.isRequired,\n    city: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      slug: PropTypes.string.isRequired,\n    }).isRequired,\n    title: PropTypes.string.isRequired,\n    activity: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        slug: PropTypes.string.isRequired,\n      }).isRequired,\n    ).isRequired,\n    link: PropTypes.string.isRequired,\n    logo: PropTypes.string.isRequired,\n  }).isRequired,\n).isRequired;\n\nexport const clubPropTypes = PropTypes.shape({\n  title_short: PropTypes.string.isRequired,\n  city: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n  }).isRequired,\n  title: PropTypes.string.isRequired,\n  activity: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      slug: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  link: PropTypes.string.isRequired,\n  logo: PropTypes.string.isRequired,\n}).isRequired;\n","import React, { useEffect } from 'react';\nimport './App.scss';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Heading } from './components/Heading';\nimport { getClubsThunk } from './redux/reducer';\nimport { ClubsList } from './components/ClubsList';\nimport { clubsListPropTypes } from './propTypesConstant';\n\nconst App = (props) => {\n  const { clubsList, getClubs, cities } = props;\n\n  useEffect(() => {\n    getClubs();\n  }, []);\n\n  return (\n    <div className=\"app-wrapper\">\n      <Heading />\n      <Cities cities={cities} />\n      <div><h2>Workout list</h2></div>\n      <ClubsList clubsList={clubsList} />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  clubsList: state.clubsList,\n  cities: state.cities,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getClubs: () => dispatch(getClubsThunk()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nApp.propTypes = {\n  getClubs: PropTypes.func.isRequired,\n  clubsList: clubsListPropTypes.isRequired,\n};\n\nconst Cities = (props) => {\n  const { cities } = props;\n\n  return (\n    <div className=\"list\">\n      {cities.map(city => (\n        <button\n          type=\"button\"\n          className=\"item\"\n        >\n          {city}\n        </button>\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://instasport.co/dashboard/api/v1/clubs/';\n\nexport const getClubs = () => fetch(BASE_URL)\n  .then(response => response.json());\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer } from './reducer';\n\nexport const store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}