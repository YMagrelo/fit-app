{"version":3,"sources":["components/Heading.jsx","redux/reducer.jsx","components/ClubsList.jsx","propTypesConstant.js","components/Cities.jsx","components/Activities.jsx","App.jsx","api.js","redux/store.jsx","index.js"],"names":["Heading","className","initialState","clubsList","cities","activities","setCities","payload","type","setActivities","ClubsList","PropTypes","arrayOf","shape","title_short","string","isRequired","city","title","slug","activity","link","logo","props","map","club","key","Club","href","src","alt","defaultProps","array","object","Cities","setSelectedCity","selectedCity","onClick","classNames","isActive","Activities","selectedActivity","setSelectedActivity","App","getClubs","useState","useEffect","filteredClubs","filter","some","action","connect","state","dispatch","a","fetch","then","response","json","data","Set","flat","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d77d8c10.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Heading = () => (\n  <div className=\"heading\">\n    <h1 className=\"heading__title\">Запись на тренировки онлайн</h1>\n    <p className=\"heading__list-title\">На нашем сайте вы сможете:</p>\n    <ul className=\"heading__list\">\n\n      <li className=\"heading__item\">\n          Узнать расписание тренировок в спортивных клубах\n      </li>\n      <li className=\"heading__item\">Записаться на тренировку</li>\n      <li className=\"heading__item\">\n          Выбрать абонемент и оплатить его кредитной картой\n      </li>\n    </ul>\n  </div>\n);\n","import { getClubs } from '../api';\n\nconst SET_CLUBS = 'SET_CLUBS';\nconst SET_CITIES = 'SET_SITIES';\nconst SET_ACTIVITIES = 'SET_ACTIVITIES';\n\nconst initialState = {\n  clubsList: [],\n  cities: [],\n  activities: [],\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CLUBS:\n      return {\n        ...state,\n        clubsList: action.payload,\n      };\n\n    case SET_CITIES:\n      return {\n        ...state,\n        cities: action.payload,\n      };\n\n    case SET_ACTIVITIES:\n      return {\n        ...state,\n        activities: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setClubs = payload => ({\n  type: SET_CLUBS,\n  payload,\n});\n\nconst setCities = payload => ({\n  type: SET_CITIES,\n  payload,\n});\n\nconst setActivities = payload => ({\n  type: SET_ACTIVITIES,\n  payload,\n});\n\nexport const getClubsThunk = () => async(dispatch) => {\n  const data = await getClubs();\n\n  dispatch(setClubs(data));\n\n  // set unique value of cities\n  const cities = [...new Set(data.map(club => club.city.title))];\n\n  // set unique value of activities\n  const activities = [...new Set(data\n    .map(club => club.activity\n      .map(activity => activity.slug))\n    .flat())];\n\n  dispatch(setCities(cities));\n  dispatch(setActivities(activities));\n};\n","import React from 'react';\nimport './ClubsList.scss';\nimport PropTypes from 'prop-types';\n\nimport { clubsListPropTypes, clubPropTypes } from '../propTypesConstant';\n\nexport const ClubsList = (props) => {\n  const { clubsList } = props;\n\n  return (\n    <div className=\"list\">\n\n      {clubsList.map(club => (\n        <Club club={club} key={club.title} />\n      ))}\n\n    </div>\n  );\n};\n\nconst Club = (props) => {\n  const { club } = props;\n\n  return (\n    <div className=\"item\" key={club.title}>\n      <a href={club.link} className=\"item__link\">\n        <img src={club.logo} alt=\"club logo\" className=\"item__logo\" />\n      </a>\n      <p className=\"item__title\">{club.title_short}</p>\n    </div>\n  );\n};\n\nClubsList.propTypes = {\n  clubsList: clubsListPropTypes,\n};\n\nClub.propTypes = {\n  club: clubPropTypes,\n};\n\nClubsList.defaultProps = {\n  clubsList: PropTypes.array,\n};\n\nClub.defaultProps = {\n  club: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\n\nexport const clubsListPropTypes = PropTypes.arrayOf(\n  PropTypes.shape({\n    title_short: PropTypes.string.isRequired,\n    city: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      slug: PropTypes.string.isRequired,\n    }).isRequired,\n    title: PropTypes.string.isRequired,\n    activity: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        slug: PropTypes.string.isRequired,\n      }).isRequired,\n    ).isRequired,\n    link: PropTypes.string.isRequired,\n    logo: PropTypes.string.isRequired,\n  }).isRequired,\n).isRequired;\n\nexport const clubPropTypes = PropTypes.shape({\n  title_short: PropTypes.string.isRequired,\n  city: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n  }).isRequired,\n  title: PropTypes.string.isRequired,\n  activity: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      slug: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  link: PropTypes.string.isRequired,\n  logo: PropTypes.string.isRequired,\n}).isRequired;\n","import React from 'react';\nimport './Cities.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const Cities = (props) => {\n  const { cities, setSelectedCity, selectedCity } = props;\n\n  return (\n    <div className=\"citiesList\">\n      {selectedCity\n      && (\n        <button\n          type=\"button\"\n          className=\"citiesItem citiesItem--reset\"\n          onClick={() => setSelectedCity('')}\n        >\nReset\n        </button>\n      )}\n      {cities.map(city => (\n        <button\n          type=\"button\"\n          className={classNames('citiesItem',\n            { isActive: selectedCity === city })}\n          onClick={() => setSelectedCity(city)}\n          key={city}\n        >\n          {city}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nCities.propTypes = {\n  cities: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedCity: PropTypes.func.isRequired,\n  selectedCity: PropTypes.string,\n};\n\nCities.defaultProps = {\n  selectedCity: PropTypes.string,\n};\n","import React from 'react';\nimport './Activities.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const Activities = (props) => {\n  const { activities, selectedActivity, setSelectedActivity } = props;\n\n  return (\n    <div className=\"activitiesList\">\n      {selectedActivity\n      && (\n        <button\n          type=\"button\"\n          className=\"activitiesItem activitiesItem--reset\"\n          onClick={() => setSelectedActivity('')}\n        >\nReset\n        </button>\n      )}\n      {activities.map(activity => (\n        <button\n          type=\"button\"\n          className={classNames('activitiesItem',\n            { isActive: activity === selectedActivity })}\n          onClick={() => setSelectedActivity(activity)}\n          key={activity}\n        >\n          {activity}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nActivities.propTypes = {\n  activities: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedActivity: PropTypes.func.isRequired,\n  selectedActivity: PropTypes.string,\n};\n\nActivities.defaultProps = {\n  selectedActivity: PropTypes.string,\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Heading } from './components/Heading';\nimport { getClubsThunk } from './redux/reducer';\nimport { ClubsList } from './components/ClubsList';\nimport { clubsListPropTypes } from './propTypesConstant';\nimport { Cities } from './components/Cities';\nimport { Activities } from './components/Activities';\n\nconst App = (props) => {\n  const { clubsList, getClubs, cities, activities } = props;\n  const [selectedCity, setSelectedCity] = useState('');\n  const [selectedActivity, setSelectedActivity] = useState('');\n\n  useEffect(() => {\n    getClubs();\n  }, []);\n\n  let filteredClubs = clubsList;\n\n  if (selectedCity) {\n    // filtering by city\n    filteredClubs = clubsList.filter(club => club.city.title === selectedCity);\n  } else if (selectedActivity) {\n    // filtering by activity\n    filteredClubs = clubsList\n      .filter(club => club.activity\n        .some(action => action.slug === selectedActivity));\n  }\n\n  if (selectedActivity && selectedCity) {\n    // filtering by city & activity\n    filteredClubs = clubsList\n      .filter(club => club.city.title === selectedCity && club.activity\n        .some(action => action.slug === selectedActivity));\n  }\n\n  return (\n    <div className=\"app-wrapper\">\n      <Heading />\n      <Cities\n        cities={cities}\n        setSelectedCity={setSelectedCity}\n        selectedCity={selectedCity}\n      />\n      <Activities\n        activities={activities}\n        selectedActivity={selectedActivity}\n        setSelectedActivity={setSelectedActivity}\n      />\n      <ClubsList clubsList={filteredClubs} />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  clubsList: state.clubsList,\n  cities: state.cities,\n  activities: state.activities,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getClubs: () => dispatch(getClubsThunk()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nApp.propTypes = {\n  getClubs: PropTypes.func.isRequired,\n  clubsList: clubsListPropTypes,\n  cities: PropTypes.arrayOf(PropTypes.string).isRequired,\n  activities: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nApp.defaultProps = {\n  clubsList: PropTypes.array,\n};\n","const BASE_URL = 'https://instasport.co/dashboard/api/v1/clubs/';\n\nexport const getClubs = () => fetch(BASE_URL)\n  .then(response => response.json());\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer } from './reducer';\n\nexport const store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}